defmodule App.Content.Page do
  use Ecto.Schema
  import Ecto.Changeset

  schema "pages" do
    field(:content, :string)
    belongs_to(:topic, App.Content.Topic)
    many_to_many(:tags, App.Content.Tag, join_through: "pages_tags", on_replace: :delete)

    has_many(:page_tags, App.Content.PageTag,
      on_delete: :delete_all,
      on_replace: :delete
    )

    timestamps()
  end

  @doc false
  def changeset(page, attrs) do
    page
    |> cast(attrs, [:content, :topic_id])
    |> validate_required([:content, :topic_id])
    |> foreign_key_constraint(:topic_id)
    |> cast_assoc(:page_tags,
      with: &App.Content.PageTag.changeset/2,
      sort_param: :page_tags_sort,
      drop_param: :page_tags_drop
    )
  end
end
