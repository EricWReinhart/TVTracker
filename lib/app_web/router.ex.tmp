defmodule AppWeb.RouterORIGINAL do
  use AppWeb, :router

  import AppWeb.UserAuth
  import AppWeb.LocaleController, only: [put_locale: 2]

  pipeline :browser do
    plug(:accepts, ["html"])
    plug(:fetch_session)
    plug(:put_locale)
    plug(:fetch_live_flash)
    plug(:put_root_layout, html: {AppWeb.Layouts, :root})
    plug(:protect_from_forgery)
    plug(:put_secure_browser_headers)
    plug(:fetch_current_user)
    plug(AppWeb.Plugs.CustomPlug)
    # plug AppWeb.UserAuth, :fetch_current_user
    # plug(Ueberauth)
    # plug :add_message_changeset
  end

  pipeline :api do
    plug(:accepts, ["json"])
  end

  scope "/", AppWeb do
    # <- includes fetch_current_user
    pipe_through [:browser, :redirect_if_user_is_authenticated]

    get "/auth/:provider", GoogleAuthController, :request
    get "/auth/:provider/callback", GoogleAuthController, :callback
  end

  scope "/", AppWeb do
    pipe_through(:browser)

    # get "/auth/google", GoogleAuthController, :request
    # get "/auth/google/callback", GoogleAuthController, :callback

    get("/", PageController, :home)

    # get "/courses", PageController, :courses
    # get "/courses/:slug", PageController, :courses

    # get("/planets", PlanetController, :planets)
    # get("/planets/random", PlanetController, :random_planet)
    # get("/planets/:n", PlanetController, :planet_by_id)

    # get("/gallery", PageController, :gallery)
    # get("/gallery/:slug", PageController, :gallery)

    resources("/courses", CourseController)

    put("/locale/:locale", LocaleController, :update)

    # resources("/messages", MessageController, only: [:create, :new, :show])

    # live("/posts", PostLive.Index, :index)
    # live("/posts/new", PostLive.Index, :new)
    # live("/posts/:id/edit", PostLive.Index, :edit)

    # live("/posts/:id", PostLive.Show, :show)
    # live("/posts/:id/show/edit", PostLive.Show, :edit)
  end

  # Other scopes may use custom stacks.
  # scope "/api", AppWeb do
  #   pipe_through :api
  # end

  # Enable LiveDashboard and Swoosh mailbox preview in development
  if Application.compile_env(:app, :dev_routes) do
    # If you want to use the LiveDashboard in production, you should put
    # it behind authentication and allow only admins to access it.
    # If your application does not have an admins-only section yet,
    # you can use Plug.BasicAuth to set up some basic authentication
    # as long as you are also using SSL (which you should anyway).
    import Phoenix.LiveDashboard.Router

    scope "/dev" do
      pipe_through(:browser)

      live_dashboard("/dashboard", metrics: AppWeb.Telemetry)
      forward("/mailbox", Plug.Swoosh.MailboxPreview)
    end
  end

  ## Authentication routes

  scope "/", AppWeb do
    pipe_through([:browser, :redirect_if_user_is_authenticated])

    live_session :redirect_if_user_is_authenticated,
      on_mount: [
        {AppWeb.UserAuth, :redirect_if_user_is_authenticated},
        {AppWeb.UserAuth, :add_message_changeset},
        {AppWeb.UserAuth, :put_locale}
      ] do
      live("/users/register", UserRegistrationLive, :new)
      live("/users/log_in", UserLoginLive, :new)
      live("/users/reset_password", UserForgotPasswordLive, :new)
      live("/users/reset_password/:token", UserResetPasswordLive, :edit)
    end

    post("/users/log_in", UserSessionController, :create)
  end

  scope "/", AppWeb do
    pipe_through([:browser, :require_authenticated_user])

    live_session :require_authenticated_user,
      on_mount: [
        {AppWeb.UserAuth, :mount_current_user},
        {AppWeb.UserAuth, :ensure_authenticated},
        {AppWeb.UserAuth, :add_message_changeset},
        {AppWeb.UserAuth, :put_locale}
      ] do
      live("/users/settings", UserSettingsLive, :edit)
      live("/users/settings/confirm_email/:token", UserSettingsLive, :confirm_email)
      resources("/messages", MessageController, only: [:index, :delete])

      # live "/topics/new", TopicLive.Index, :new
      # live "/topics/:slug/edit", TopicLive.Index, :edit
      # live "/topics/:slug/show/edit", TopicLive.Show, :edit # don't think this one is used

      # # authenticated to access topics (otherwise flash messages are messy)
      # live "/topics", TopicLive.Index, :index
      # live "/topics/:slug", TopicLive.Show, :show

      # live "/topics/:slug/:page_id", PageLive.Show, :show
      # live "/topics/:slug/pages", PageLive.Show, :show



      # MediaTracker routes
      # live("/mediatracker/tv/search", TVSearch)
      # live("/mediatracker/tv/stats", TVStats)
      # live "/mediatracker/tv", TVLive, :index
      # live "/mediatracker/tv/:id", TVInfo, :show
      # live "/mediatracker/import", ImportLive
      # live "/mediatracker", HomeLive


      # TVTracker routes
      live("/tvtracker/tv/search", TVSearch)
      live("/tvtracker/tv/stats", TVStats)
      live "/tvtracker/tv", TVLive, :index
      live "/tvtracker/tv/:id", TVInfo, :show
      live "/tvtracker/import", ImportLive
      live "/tvtracker", HomeLive


    end
  end

  scope "/", AppWeb do
    pipe_through([:browser])

    live_session :public_live,
      on_mount: [
        {AppWeb.UserAuth, :add_message_changeset},
        {AppWeb.UserAuth, :put_locale}
      ] do
      live("/pokemon", FacemashLive)
      resources("/messages", MessageController, only: [:create, :new, :show])

      # live "/topics", TopicLive.Index, :index
      # live "/topics/:slug", TopicLive.Show, :show

      live("/chat", ChatLive, :chat)
      live("/chat/join", ChatLive, :join)

      live("/topics", TopicLive.Index, :index)
      live("/topics/new", TopicLive.Index, :new)
      live("/topics/:slug/edit", TopicLive.Index, :edit)
      live("/topics/:slug/show/edit", TopicLive.Show, :edit)
      live("/topics/:slug", TopicLive.Show, :show)

      live("/topics/:slug/pages", PageLive.Index, :index)
      live("/topics/:slug/pages/new", PageLive.Index, :new)
      live("/topics/:slug/pages/:page_id", PageLive.Show, :show)
      live("/topics/:slug/pages/:page_id/edit", PageLive.Show, :edit)

      live("/items", ItemLive.Index, :index)
      live("/items/new", ItemLive.Index, :new)
      live("/items/:id/edit", ItemLive.Index, :edit)

      live("/items/:id", ItemLive.Show, :show)
      live("/items/:id/show/edit", ItemLive.Show, :edit)

      live("/accessibility", AccessibilityLive)
      live("/animations", AnimationsLive)
      live("/gallery", GalleryLive)

      live("/minesweeper", MinesweeperLive, :new)
      # live("/minesweeper/:game_id", Minesweeperlive, :play)

      live("/planets", PlanetsLive)

      live("/charts", ChartLive)

      # TODO: need user authenticated
      # live("/mediatracker", MediaTrackerLive)
      # live("/mediatracker/tv/search", TVSearch)
      # live("/mediatracker/tv", TVLive)

      # live("/mediatracker/tv", MediaTrackerTVOLD)
      # live("/mediatracker/movies", MediaTrackerTVOLD)
    end
  end

  scope "/", AppWeb do
    pipe_through([:browser])

    delete("/users/log_out", UserSessionController, :delete)

    live_session :current_user,
      on_mount: [
        {AppWeb.UserAuth, :mount_current_user},
        {AppWeb.UserAuth, :add_message_changeset},
        {AppWeb.UserAuth, :put_locale}
      ] do
      live("/users/confirm/:token", UserConfirmationLive, :edit)
      live("/users/confirm", UserConfirmationInstructionsLive, :new)
    end
  end
end
