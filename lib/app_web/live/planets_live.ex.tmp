defmodule AppWeb.PlanetsLive do
  use AppWeb, :live_view

  alias App.Planets
  alias App.Notification
  alias App.Notification.Message

  def render(assigns) do
    ~H"""
    <div class="max-w-4xl mx-auto mt-5">
      <div class="overflow-hidden bg-white shadow sm:rounded-lg dark:bg-gray-800">
        <div class="px-4 py-5 sm:px-6">
          <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100">Planets List</h3>
          <p class="mt-1 max-w-2xl text-sm text-gray-500 dark:text-gray-400">Sortable list of planets</p>
        </div>
        <div class="border-t border-gray-200 dark:border-gray-600 overflow-x-auto">
          <table class="w-full divide-y divide-gray-200 dark:divide-gray-600">
            <thead class="bg-gray-50 dark:bg-gray-700">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400 cursor-pointer" phx-click="sort" phx-value-column="id">
                  ID {if @sort_by == :id, do: if(@sort_order == :asc, do: "▲", else: "▼")}
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400 cursor-pointer" phx-click="sort" phx-value-column="name">
                  Name {if @sort_by == :name, do: if(@sort_order == :asc, do: "▲", else: "▼")}
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400 cursor-pointer" phx-click="sort" phx-value-column="mass">
                  Mass {if @sort_by == :mass, do: if(@sort_order == :asc, do: "▲", else: "▼")}
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400 cursor-pointer" phx-click="sort" phx-value-column="moons">
                  Moons {if @sort_by == :moons, do: if(@sort_order == :asc, do: "▲", else: "▼")}
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400 cursor-pointer" phx-click="sort" phx-value-column="temperature">
                  Average Temperature {if @sort_by == :temperature, do: if(@sort_order == :asc, do: "▲", else: "▼")}
                </th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200 dark:bg-gray-800 dark:divide-gray-700">
              <%= for planet <- @planets do %>
                <tr class="hover:bg-gray-100 dark:hover:bg-gray-700">
                  <td class="px-6 py-4 text-sm text-gray-900 dark:text-gray-200"><%= planet.id %></td>
                  <td class="px-6 py-4 text-sm text-gray-900 dark:text-gray-200"><%= planet.name %></td>
                  <td class="px-6 py-4 text-sm text-gray-900 dark:text-gray-200"><%= planet.mass %></td>
                  <td class="px-6 py-4 text-sm text-gray-900 dark:text-gray-200"><%= planet.moons %></td>
                  <td class="px-6 py-4 text-sm text-gray-900 dark:text-gray-200"><%= planet.temperature %></td>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
    """
  end

  def mount(_params, _session, socket) do
    {:ok,
     assign(socket,
       message_changeset: Notification.change_message(%Message{}),
       planets: Planets.list_planets(),
       sort_by: :id,
       sort_order: :asc)
    }
  end

  def handle_event("sort", %{"column" => column}, socket) do
    column = String.to_existing_atom(column)
    new_order =
      if socket.assigns.sort_by == column and socket.assigns.sort_order == :asc,
        do: :desc,
        else: :asc

    sorted_planets = Planets.list_planets({column, new_order})

    {:noreply,
      assign(socket,
        planets: sorted_planets,
        sort_by: column,
        sort_order: new_order)
    }
  end

  def handle_event(event, unsigned_params, socket) do
    AppWeb.LiveHelper.handle_event(event, unsigned_params, socket)
  end
end
